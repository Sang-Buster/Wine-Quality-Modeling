{
  "hash": "0c515a855b25f05d64c366b6cd7020a4",
  "result": {
    "markdown": "---\ntitle: \"Naive Bayes\"\n---\n\n\n\n\n\n## Model Construction\n\n::: {.cell layout-align=\"TRUE\"}\n\n```{.r .cell-code}\n#--------------------#\n#----Naive Bayes-----#\n#--------------------#\nset.seed(1234)\ntrain_control <- trainControl(method = \"cv\", number = 10)\n\nset.seed(1234)\nnb_model <- train(good ~ ., \n               data = train, \n               method = \"naive_bayes\", \n               trControl = train_control)\n\nsave(nb_model, file = \"dataset\\\\model\\\\nb.model_kfoldCV.Rdata\")\n```\n:::\n\n\n## K-fold CV\n\n::: {.cell layout-align=\"TRUE\"}\n\n```{.r .cell-code}\n# Data Import\nload(\"dataset\\\\train.Rdata\")\nload(\"dataset\\\\test.Rdata\")\n\n# Model Import\nload(\"dataset\\\\model\\\\nb.model_kfoldCV.Rdata\")\n\nnb.predictions <- predict(nb_model, newdata = test)\n\nconfusionMatrix(nb.predictions, test$good)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 750  73\n         1 211 154\n                                          \n               Accuracy : 0.7609          \n                 95% CI : (0.7356, 0.7849)\n    No Information Rate : 0.8089          \n    P-Value [Acc > NIR] : 1               \n                                          \n                  Kappa : 0.3724          \n                                          \n Mcnemar's Test P-Value : 4.312e-16       \n                                          \n            Sensitivity : 0.7804          \n            Specificity : 0.6784          \n         Pos Pred Value : 0.9113          \n         Neg Pred Value : 0.4219          \n             Prevalence : 0.8089          \n         Detection Rate : 0.6313          \n   Detection Prevalence : 0.6928          \n      Balanced Accuracy : 0.7294          \n                                          \n       'Positive' Class : 0               \n                                          \n```\n:::\n\n```{.r .cell-code}\nnb.predictions <- as.numeric(nb.predictions)\npred_obj <- prediction(nb.predictions, test$good)\nauc_val <- performance(pred_obj, \"auc\")@y.values[[1]]\nauc_val\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.7294256\n```\n:::\n\n```{.r .cell-code}\nroc_obj <- performance(pred_obj, \"tpr\", \"fpr\")\nplot(roc_obj, colorize = TRUE, lwd = 2,\n     xlab = \"False Positive Rate\", \n     ylab = \"True Positive Rate\",\n     main = \"ROC Curves from Repeated CV\")\npoints(auc_val, 1 - auc_val, \n       col = \"steelblue\", \n       pch = 21)\nabline(a = 0, b = 1)\n```\n\n```{.r .cell-code}\nnb.kfoldCV.ROC.plot <- recordPlot()\n```\n:::\n\n\n### Tuned\n\n::: {.cell layout-align=\"TRUE\"}\n\n:::\n\n\n| Resampling Method  | Error Rate | Sensitivity | Specificity | AUC       |\n| ------------------ | ---------- | ----------- | ----------- | --------- |\n| Naive Bayes        | 0.2391     | 0.7804      | 0.6784      | 0.7294256 |\n| Naive Bayes (Tuned)| 0.xxxx     | 0.xxxx      | 0.xxxx      | 0.xxxxxxx |\n\n\n::: {.cell layout-align=\"TRUE\"}\n\n:::",
    "supporting": [
      "naiveBayes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}