{
  "hash": "359e1532af2178244326a32bc60a41d5",
  "result": {
    "markdown": "---\ntitle: \"Random Forest (Classification)\"\n---\n\n\n\n\n\n## Model Construction\n\n::: {.cell layout-align=\"TRUE\"}\n\n```{.r .cell-code}\n#----------------------#\n#----Random Forest-----#\n#----------------------#\nset.seed(1234)\ntrain_control <- trainControl(method = \"cv\", number = 10)\n\nset.seed(1234)\nrf_model <- train(good ~ ., \n               data = train, \n               method = \"rf\", \n               trControl = train_control)\n\nsave(rf_model, file = \"dataset\\\\model\\\\rf.model_kfoldCV.Rdata\")\n```\n:::\n\n\n## K-fold CV\n\n::: {.cell layout-align=\"TRUE\"}\n\n```{.r .cell-code}\n# Data Import\nload(\"dataset\\\\wine.data_cleaned.Rdata\")\nload(\"dataset\\\\train.Rdata\")\nload(\"dataset\\\\test.Rdata\")\n\n# Function Import\nload(\"dataset\\\\function\\\\accu.kappa.plot.Rdata\")\n\n# Model import\nload(\"dataset\\\\model\\\\rf.model_kfoldCV.Rdata\")\n\nrf.predictions <- predict(rf_model, newdata = test)\n\nconfusionMatrix(rf.predictions, test$good)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 929  36\n         1  20 203\n                                          \n               Accuracy : 0.9529          \n                 95% CI : (0.9392, 0.9642)\n    No Information Rate : 0.7988          \n    P-Value [Acc > NIR] : < 2e-16         \n                                          \n                  Kappa : 0.8496          \n                                          \n Mcnemar's Test P-Value : 0.04502         \n                                          \n            Sensitivity : 0.9789          \n            Specificity : 0.8494          \n         Pos Pred Value : 0.9627          \n         Neg Pred Value : 0.9103          \n             Prevalence : 0.7988          \n         Detection Rate : 0.7820          \n   Detection Prevalence : 0.8123          \n      Balanced Accuracy : 0.9141          \n                                          \n       'Positive' Class : 0               \n                                          \n```\n:::\n\n```{.r .cell-code}\nrf.predictions <- as.numeric(rf.predictions)\npred_obj <- prediction(rf.predictions, test$good)\nauc_val <- performance(pred_obj, \"auc\")@y.values[[1]]\nauc_val\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.9141488\n```\n:::\n\n```{.r .cell-code}\nroc_obj <- performance(pred_obj, \"tpr\", \"fpr\")\nplot(roc_obj, colorize = TRUE, lwd = 2,\n     xlab = \"False Positive Rate\", \n     ylab = \"True Positive Rate\",\n     main = \"Random Forest (10-fold CV)\")\nabline(a = 0, b = 1)\nx_values <- as.numeric(unlist(roc_obj@x.values))\ny_values <- as.numeric(unlist(roc_obj@y.values))\npolygon(x = x_values, y = y_values, \n        col = rgb(0.3803922, 0.6862745, 0.9372549, alpha = 0.3),\n        border = NA)\npolygon(x = c(0, 1, 1), y = c(0, 0, 1), \n        col = rgb(0.3803922, 0.6862745, 0.9372549, alpha = 0.3),\n        border = NA)\ntext(0.6, 0.4, paste(\"AUC =\", round(auc_val, 4)))\n```\n\n```{.r .cell-code}\nrf.kfoldCV.ROC.plot <- recordPlot()\n\npander::pander(rf_model$results)\n```\n\n::: {.cell-output-display}\n-------------------------------------------------\n mtry   Accuracy   Kappa    AccuracySD   KappaSD \n------ ---------- -------- ------------ ---------\n  2      0.8251    0.3767    0.01759      0.063  \n\n  6      0.8168    0.3629    0.01911     0.07142 \n\n  11     0.8139    0.3615    0.02738     0.09509 \n-------------------------------------------------\n:::\n:::\n\n\n## Summary\n\n::: {.cell layout-align=\"TRUE\"}\n\n```{.r .cell-code}\ncowplot::plot_grid(rf.kfoldCV.ROC.plot)\n```\n\n::: {.cell-output-display}\n![](randomForest_files/figure-html/unnamed-chunk-1-1.png){fig-align='TRUE' width=480}\n:::\n:::\n\n\n| Resampling Method    | Error Rate | Sensitivity | Specificity | AUC       |\n| -------------------- | ---------- | ----------- | ----------- | --------- |\n| Random Forest        | 0.0471     | 0.9789      | 0.8494      | 0.9141488 |\n\n\n::: {.cell layout-align=\"TRUE\"}\n\n:::",
    "supporting": [
      "randomForest_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}