{
  "hash": "249db3cc90364449150bd78ed8fcd8c6",
  "result": {
    "markdown": "---\ntitle: \"Exploratory Analysis\"\n---\n\n\n\n\n## Data Import\n\n::: {.cell}\n\n```{.r .cell-code}\nwine.data <- read.csv(\"dataset\\\\winequality-white.csv\", sep=\";\", header = T)\n\nwine.data <-  wine.data %>% mutate(good = ifelse(quality>=7, 1, 0))\n\nhead(wine.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  fixed.acidity volatile.acidity citric.acid residual.sugar chlorides\n1           7.0             0.27        0.36           20.7     0.045\n2           6.3             0.30        0.34            1.6     0.049\n3           8.1             0.28        0.40            6.9     0.050\n4           7.2             0.23        0.32            8.5     0.058\n5           7.2             0.23        0.32            8.5     0.058\n6           8.1             0.28        0.40            6.9     0.050\n  free.sulfur.dioxide total.sulfur.dioxide density   pH sulphates alcohol\n1                  45                  170  1.0010 3.00      0.45     8.8\n2                  14                  132  0.9940 3.30      0.49     9.5\n3                  30                   97  0.9951 3.26      0.44    10.1\n4                  47                  186  0.9956 3.19      0.40     9.9\n5                  47                  186  0.9956 3.19      0.40     9.9\n6                  30                   97  0.9951 3.26      0.44    10.1\n  quality good\n1       6    0\n2       6    0\n3       6    0\n4       6    0\n5       6    0\n6       6    0\n```\n:::\n:::\n\n\n## Data Analysis\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(wine.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4898   13\n```\n:::\n\n```{.r .cell-code}\n# Removing duplicate Rows\nwine.data <- wine.data[!duplicated(wine.data), ]\n\ndim(wine.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 3961   13\n```\n:::\n\n```{.r .cell-code}\nstr(wine.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n'data.frame':\t3961 obs. of  13 variables:\n $ fixed.acidity       : num  7 6.3 8.1 7.2 6.2 8.1 8.1 8.6 7.9 6.6 ...\n $ volatile.acidity    : num  0.27 0.3 0.28 0.23 0.32 0.22 0.27 0.23 0.18 0.16 ...\n $ citric.acid         : num  0.36 0.34 0.4 0.32 0.16 0.43 0.41 0.4 0.37 0.4 ...\n $ residual.sugar      : num  20.7 1.6 6.9 8.5 7 1.5 1.45 4.2 1.2 1.5 ...\n $ chlorides           : num  0.045 0.049 0.05 0.058 0.045 0.044 0.033 0.035 0.04 0.044 ...\n $ free.sulfur.dioxide : num  45 14 30 47 30 28 11 17 16 48 ...\n $ total.sulfur.dioxide: num  170 132 97 186 136 129 63 109 75 143 ...\n $ density             : num  1.001 0.994 0.995 0.996 0.995 ...\n $ pH                  : num  3 3.3 3.26 3.19 3.18 3.22 2.99 3.14 3.18 3.54 ...\n $ sulphates           : num  0.45 0.49 0.44 0.4 0.47 0.45 0.56 0.53 0.63 0.52 ...\n $ alcohol             : num  8.8 9.5 10.1 9.9 9.6 11 12 9.7 10.8 12.4 ...\n $ quality             : int  6 6 6 6 6 6 5 5 5 7 ...\n $ good                : num  0 0 0 0 0 0 0 0 0 1 ...\n```\n:::\n\n```{.r .cell-code}\nsummary(wine.data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n fixed.acidity    volatile.acidity  citric.acid     residual.sugar  \n Min.   : 3.800   Min.   :0.0800   Min.   :0.0000   Min.   : 0.600  \n 1st Qu.: 6.300   1st Qu.:0.2100   1st Qu.:0.2700   1st Qu.: 1.600  \n Median : 6.800   Median :0.2600   Median :0.3200   Median : 4.700  \n Mean   : 6.839   Mean   :0.2805   Mean   :0.3343   Mean   : 5.915  \n 3rd Qu.: 7.300   3rd Qu.:0.3300   3rd Qu.:0.3900   3rd Qu.: 8.900  \n Max.   :14.200   Max.   :1.1000   Max.   :1.6600   Max.   :65.800  \n   chlorides       free.sulfur.dioxide total.sulfur.dioxide    density      \n Min.   :0.00900   Min.   :  2.00      Min.   :  9.0        Min.   :0.9871  \n 1st Qu.:0.03500   1st Qu.: 23.00      1st Qu.:106.0        1st Qu.:0.9916  \n Median :0.04200   Median : 33.00      Median :133.0        Median :0.9935  \n Mean   :0.04591   Mean   : 34.89      Mean   :137.2        Mean   :0.9938  \n 3rd Qu.:0.05000   3rd Qu.: 45.00      3rd Qu.:166.0        3rd Qu.:0.9957  \n Max.   :0.34600   Max.   :289.00      Max.   :440.0        Max.   :1.0390  \n       pH          sulphates         alcohol         quality     \n Min.   :2.720   Min.   :0.2200   Min.   : 8.00   Min.   :3.000  \n 1st Qu.:3.090   1st Qu.:0.4100   1st Qu.: 9.50   1st Qu.:5.000  \n Median :3.180   Median :0.4800   Median :10.40   Median :6.000  \n Mean   :3.195   Mean   :0.4904   Mean   :10.59   Mean   :5.855  \n 3rd Qu.:3.290   3rd Qu.:0.5500   3rd Qu.:11.40   3rd Qu.:6.000  \n Max.   :3.820   Max.   :1.0800   Max.   :14.20   Max.   :9.000  \n      good       \n Min.   :0.0000  \n 1st Qu.:0.0000  \n Median :0.0000  \n Mean   :0.2083  \n 3rd Qu.:0.0000  \n Max.   :1.0000  \n```\n:::\n\n```{.r .cell-code}\n# Check for NAs in dataset\nsum(is.na(wine.data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0\n```\n:::\n\n```{.r .cell-code}\n# Counts at each combination of response's factor levels\ntable(wine.data$quality)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   3    4    5    6    7    8    9 \n  20  153 1175 1788  689  131    5 \n```\n:::\n:::\n\n\n## Data Histograms\n\n::: {.cell}\n\n```{.r .cell-code}\nwine.colnames <- colnames(wine.data[, 1:12])\nnum_plots     <- length(wine.colnames)\nnum_rows      <- ceiling(num_plots/3)\n\n\n# Create an empty list to store plots\ngrid_arr      <- list()\n\n\n# Loop over each column name in the wine.colnames vector\nfor(i in 1:num_plots) {\n  # Create a ggplot object for the current column using aes\n  plt <- ggplot(data = wine.data, aes_string(x = wine.colnames[i])) +\n    geom_histogram(binwidth = diff(range(wine.data[[wine.colnames[i]]]))/30, \n                   color = \"black\", fill = \"slategray3\") +\n    labs(x = wine.colnames[i], y = \"Frequency\") +\n    theme_bw()\n  \n  # Add the current plot to the grid_arr list\n  grid_arr[[i]] <- plt\n}\n\ngrid_arr <- do.call(gridExtra::grid.arrange, c(grid_arr, ncol = 3))\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/hist_plot-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n:::\n\n\n## Data Relationships\n\n::: {.cell}\n\n```{.r .cell-code}\nreshape2::melt(wine.data[, 1:12], \"quality\") %>% \n  ggplot(aes(value, quality, color = variable)) +  \n  geom_point() + \n  geom_smooth(aes(value,quality, colour=variable), method=lm, se=FALSE)+\n  facet_wrap(.~variable, scales = \"free\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/relation_plot-1.png){width=960}\n:::\n\n```{.r .cell-code}\n# Collinearity between Attributes\ncor(wine.data) %>% \n  corrplot::corrplot(method = 'number',  type = \"lower\", tl.col = \"steelblue\", number.cex = 0.5)\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/relation_plot-2.png){width=960}\n:::\n\n```{.r .cell-code}\n# Remove quality from dataset, use good as response \nwine.data$quality <- NULL \n```\n:::\n\n\n## Data Split\n\n::: {.cell}\n\n```{.r .cell-code}\n# Splitting the dataset into train and test (7/10th for train remaining for test)\ninTrain <- caret::createDataPartition(wine.data$good, p = 7/10, list = F)\ntrain <- wine.data[inTrain,]\ntest <- wine.data[-inTrain,]\n\n\n# Convert the outcome variable to a factor with two levels\ntrain$good <- as.factor(train$good)\ntest$good <- as.factor(test$good)\n\n# Data savings for model building in the next\nsave(wine.data, file = \"dataset\\\\wine.data.Rdata\")\nsave(train, file = \"dataset\\\\train.Rdata\")\nsave(test, file = \"dataset\\\\test.Rdata\")\n```\n:::\n",
    "supporting": [
      "analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}