{
  "hash": "f3bfae20a709f62433c9b8cb7b534283",
  "result": {
    "markdown": "---\ntitle: \"Quadratic Discriminant Analysis\"\n---\n\n\n\n\n\n## Model Construction\n\n::: {.cell}\n\n```{.r .cell-code}\n#------------#\n#----LDA-----#\n#------------#\nset.seed(1234)\ntrain_control <- trainControl(method = \"cv\", number = 10)\n\nset.seed(1234)\nlda_model <- train(good ~ ., \n                   data = train, \n                   method = \"lda\", \n                   trControl = train_control)\n\nsave(lda_model, file = \"dataset\\\\lda.model_kfoldCV.Rdata\")\n\n\n#------------------#\n#----LDA (Mod)-----#\n#------------------#\n```\n:::\n\n\n## K-fold CV\n\n::: {.cell}\n\n```{.r .cell-code}\n# Data Import\nload(\"dataset\\\\wine.data.Rdata\")\nload(\"dataset\\\\train.Rdata\")\nload(\"dataset\\\\test.Rdata\")\n\n# Model Import\nload(\"dataset\\\\model\\\\lda.model_kfoldCV.Rdata\")\n\nlda.predictions <- predict(lda_model, newdata = test)\n\nconfusionMatrix(lda.predictions, test$good)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nConfusion Matrix and Statistics\n\n          Reference\nPrediction   0   1\n         0 881 160\n         1  68  79\n                                          \n               Accuracy : 0.8081          \n                 95% CI : (0.7845, 0.8301)\n    No Information Rate : 0.7988          \n    P-Value [Acc > NIR] : 0.2246          \n                                          \n                  Kappa : 0.3024          \n                                          \n Mcnemar's Test P-Value : 1.674e-09       \n                                          \n            Sensitivity : 0.9283          \n            Specificity : 0.3305          \n         Pos Pred Value : 0.8463          \n         Neg Pred Value : 0.5374          \n             Prevalence : 0.7988          \n         Detection Rate : 0.7416          \n   Detection Prevalence : 0.8763          \n      Balanced Accuracy : 0.6294          \n                                          \n       'Positive' Class : 0               \n                                          \n```\n:::\n\n```{.r .cell-code}\nlda.predictions <- as.numeric(lda.predictions)\npred_obj <- prediction(lda.predictions, test$good)\nauc_val <- performance(pred_obj, \"auc\")@y.values[[1]]\nauc_val\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.6294448\n```\n:::\n\n```{.r .cell-code}\nroc_obj <- performance(pred_obj, \"tpr\", \"fpr\")\nplot(roc_obj, colorize = TRUE, lwd = 2,\n     xlab = \"False Positive Rate\", \n     ylab = \"True Positive Rate\",\n     main = \"ROC Curves from Repeated CV\")\npoints(auc_val, 1 - auc_val, \n       col = \"steelblue\", \n       pch = 21)\nabline(a = 0, b = 1)\n```\n\n```{.r .cell-code}\nlda.kfoldCV.ROC.plot <- recordPlot()\n```\n:::\n\n\n| Resampling Method | Error Rate | Sensitivity | Specificity | AUC       |\n| ----------------- | ---------- | ----------- | ----------- | --------- |\n| LDA               | 0.1919     | 0.9283      | 0.3305      | 0.6294448 |\n| LDA (Tuned)       | 0.xxxx     | 0.xxxx      | 0.xxxx      | 0.xxxxxxx |\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [
      "lda_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}